[{"/frontend/dog_adoption/src/index.tsx":"1","/frontend/dog_adoption/src/serviceWorker.ts":"2","/frontend/dog_adoption/src/app/store.ts":"3","/frontend/dog_adoption/src/App.tsx":"4","/frontend/dog_adoption/src/features/auth/authSlice.ts":"5","/frontend/dog_adoption/src/features/dog_data/dog_dataSlice.ts":"6","/frontend/dog_adoption/src/features/core/Core.tsx":"7","/frontend/dog_adoption/src/features/core/NewData.tsx":"8","/frontend/dog_adoption/src/features/dog_data/Dog_Data.tsx":"9","/frontend/dog_adoption/src/features/core/EditProfile.tsx":"10","/frontend/dog_adoption/src/features/auth/Auth.tsx":"11"},{"size":648,"mtime":1610247444285,"results":"12","hashOfConfig":"13"},{"size":5424,"mtime":1610247444326,"results":"14","hashOfConfig":"13"},{"size":560,"mtime":1610254039143,"results":"15","hashOfConfig":"13"},{"size":253,"mtime":1610254264862,"results":"16","hashOfConfig":"13"},{"size":5666,"mtime":1610253895838,"results":"17","hashOfConfig":"13"},{"size":3032,"mtime":1610253769066,"results":"18","hashOfConfig":"13"},{"size":7244,"mtime":1610336060482,"results":"19","hashOfConfig":"13"},{"size":2883,"mtime":1610253811150,"results":"20","hashOfConfig":"13"},{"size":1987,"mtime":1610254618412,"results":"21","hashOfConfig":"13"},{"size":3031,"mtime":1610253818889,"results":"22","hashOfConfig":"13"},{"size":9799,"mtime":1610332353816,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"w9y0va",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/frontend/dog_adoption/src/index.tsx",[],["51","52"],"/frontend/dog_adoption/src/serviceWorker.ts",[],"/frontend/dog_adoption/src/app/store.ts",[],"/frontend/dog_adoption/src/App.tsx",[],"/frontend/dog_adoption/src/features/auth/authSlice.ts",[],"/frontend/dog_adoption/src/features/dog_data/dog_dataSlice.ts",[],"/frontend/dog_adoption/src/features/core/Core.tsx",["53"],"import React, {useEffect} from \"react\";\nimport Auth from \"../auth/Auth\";\nimport styles from \"./Core.module.css\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {AppDispatch} from \"../../app/store\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Button, Grid, Avatar, Badge, CircularProgress} from \"@material-ui/core\";\nimport {MdAddAPhoto} from \"react-icons/md\"\n\nimport {\n    fetchAsyncGetMyProfile,\n    fetchAsyncGetProfiles,\n    setOpenSignIn,\n    resetOpenSignIn,\n    setOpenSignUp,\n    resetOpenSignUp,\n    selectIsLoadingAuth,\n    selectProfile,\n    setOpenProfile,\n    resetOpenProfile,\n    editAccountName\n} from \"../auth/authSlice\";\n\nimport {\n    setOpenNewData, resetOpenNewData, fetchAsyncGetData, selectData, selectIsLoadingData\n} from \"../dog_data/dog_dataSlice\";\n\nimport Dog_Data from \"../dog_data/Dog_Data\"\nimport EditProfile from \"./EditProfile\";\nimport NewData from \"./NewData\";\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst Core: React.FC = () => {\n    const dispatch: AppDispatch = useDispatch();\n    const profile = useSelector(selectProfile);\n    const data = useSelector(selectData);\n    const isLoadingData = useSelector(selectIsLoadingData);\n    const isLoadingAuth = useSelector(selectIsLoadingAuth);\n\n    // ブラウザが起動した際に実行される処理\n    useEffect(() => {\n        const fetchBootLoader = async () => {\n            if (localStorage.localJWT) {\n                dispatch(resetOpenSignIn());\n                const result = await dispatch(fetchAsyncGetMyProfile());\n                if (fetchAsyncGetMyProfile.rejected.match(result)) {\n                    dispatch(setOpenSignIn());\n                    return null;\n                }\n                await dispatch(fetchAsyncGetData());\n                await dispatch(fetchAsyncGetProfiles());\n            }\n        };\n        fetchBootLoader();\n    }, [dispatch]);\n\n    return (\n        <div>\n            <Auth/>\n            <EditProfile/>\n            <NewData/>\n            <div className={styles.core_header}>\n                <h1 className={styles.core_title}>Dog Adoption</h1>\n                {profile?.accountName ? (\n                    <>\n                        <button className={styles.core_btnModal}\n                                onClick={() => {\n                                    dispatch(setOpenNewData());\n                                    dispatch(resetOpenProfile());\n                                }}\n                        >\n                            <MdAddAPhoto/>\n                        </button>\n                        <div className={styles.core_logout}>\n                            {(isLoadingData || isLoadingAuth) && <CircularProgress/>}\n                            <Button onClick={() => {\n                                localStorage.removeItem(\"localJWT\");\n                                dispatch(editAccountName(\"\"));\n                                dispatch((resetOpenProfile()));\n                                dispatch(resetOpenNewData());\n                                dispatch(setOpenSignIn());\n                            }}\n                            >\n                                Log Out\n                            </Button>\n                            <button className={styles.core_btnModal}\n                                    onClick={() => {\n                                        dispatch(setOpenProfile());\n                                        dispatch(resetOpenNewData());\n                                    }}\n                            >\n                                <StyledBadge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    variant=\"dot\"\n                                >\n                                    <Avatar alt=\"Who?\" src={profile.avatar}/>{\" \"}\n                                </StyledBadge>\n                            </button>\n                        </div>\n                    </>\n                ) : (\n                    <div>\n                        <Button onClick={() => {\n                            dispatch(setOpenSignIn());\n                            dispatch(resetOpenSignUp());\n                        }}\n                        >\n                            Log In\n                        </Button>\n                        <Button onClick={() => {\n                            dispatch(setOpenSignUp());\n                            dispatch(resetOpenSignIn());\n                        }}\n                        >\n                            Sign Up\n                        </Button>\n                    </div>\n                )}\n            </div>\n\n            {profile?.accountName && (\n                <>\n                    <div className={styles.core_data}>\n                        <Grid container spacing={4}>\n                            {data\n                                .slice(0)\n                                .reverse()\n                                .map((data) => (\n                                    <Grid key={data.id} item xs={12} md={4}>\n                                        <Dog_Data\n                                            dataId={data.id}\n                                            loginId={profile.accountProfile}\n                                            dogName={data.dogName}\n                                            gender={data.gender}\n                                            age={data.age}\n                                            height={data.height}\n                                            observations={data.observations}\n                                            peopleFriendly={data.peopleFriendly}\n                                            dogFriendly={data.dogFriendly}\n                                            color={data.color}\n                                            hair={data.hair}\n                                            reason_for_arrival={data.reason_for_arrival}\n                                            photo={data.photo}\n                                            companyPost={data.companyPost}\n                                        />\n                                    </Grid>\n                                ))}\n                        </Grid>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\nexport default Core;","/frontend/dog_adoption/src/features/core/NewData.tsx",["54"],"import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport {useSelector, useDispatch, createDispatchHook} from \"react-redux\";\nimport {AppDispatch} from \"../../app/store\";\nimport styles from \"./Core.module.css\";\nimport {File} from \"../types\";\nimport {\n    fetchDataStart,\n    fetchDataEnd,\n    fetchAsyncNewData,\n    resetOpenNewData,\n    selectOpenNewData\n} from \"../dog_data/dog_dataSlice\";\n\nimport {Button, TextField, IconButton} from \"@material-ui/core\";\nimport {MdAddAPhoto} from \"react-icons/md\";\n\nconst customStyles = {\n    content: {\n        top: \"55%\",\n        left: \"50%\",\n        width: 280,\n        height: 220,\n        padding: \"50px\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n\nconst NewData: React.FC = () => {\n    const dispatch: AppDispatch = useDispatch();\n    const openNewData = useSelector(selectOpenNewData);\n    const [image, setImage] = useState<File | null>(null);\n    const [name, setName] = useState(\"\");\n    const handlerEditPicture = () => {\n        const fileInput = document.getElementById(\"ImageInput\")\n        fileInput?.click();\n    };\n    const newData = async (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        const packet = {dogName: name, photo: image};\n        await dispatch(fetchDataStart());\n        await dispatch(fetchAsyncNewData(packet));\n        await dispatch(fetchDataEnd());\n        setName(\"\");\n        setImage(null);\n        dispatch(resetOpenNewData());\n    };\n\n\n    return (\n        <>\n            <Modal isOpen={openNewData}\n                   onRequestClose={async () => {\n                       await dispatch(resetOpenNewData());\n                   }}\n                   style={customStyles}>\n                <form className={styles.core_signUp}>\n                    <h1 className={styles.core_title}>Dog Adoption</h1>\n                    <br/>\n                    <TextField\n                        placeholder=\"Please enter the dog\"\n                        type=\"text\"\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                    <input\n                        type=\"file\"\n                        id=\"imageInput\"\n                        hidden={true}\n                        onChange={(e) => setImage(e.target.files![0])}\n                    />\n                    <br/>\n                    <IconButton onClick={handlerEditPicture}>\n                        <MdAddAPhoto/>\n                    </IconButton>\n                    <br/>\n                    <Button\n                        disabled={!name || !image}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={newData}\n                    >\n                        New Dog Data\n                    </Button>\n                </form>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewData;","/frontend/dog_adoption/src/features/dog_data/Dog_Data.tsx",["55","56","57","58","59","60","61"],"import React, {useState} from \"react\";\nimport styles from \"./Dog_Data.module.css\"\nimport {makeStyles} from \"@material-ui/core\";\nimport {Avatar, Divider, Checkbox} from \"@material-ui/core\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {AppDispatch} from \"../../app/store\";\nimport {selectProfiles} from \"../auth/authSlice\";\nimport {fetchDataStart, fetchDataEnd} from \"./dog_dataSlice\";\nimport {PROPS_DATA} from \"../types\";\n\n// 各保護犬データの詳細表示\nconst Dog_Data: React.FC<PROPS_DATA> = ({\n                                            dataId,\n                                            loginId,\n                                            dogName,\n                                            gender,\n                                            age,\n                                            height,\n                                            observations,\n                                            peopleFriendly,\n                                            dogFriendly,\n                                            color,\n                                            hair,\n                                            reason_for_arrival,\n                                            photo,\n                                            companyPost,\n                                        }) => {\n\n    const dispatch: AppDispatch = useDispatch();\n    const profiles = useSelector(selectProfiles);\n    const prof = profiles.filter((prof) => {\n        return prof.accountProfile === companyPost;\n    });\n\n    if (dogName) {\n        return (\n            <div className={styles.dog_data}>\n                <div className={styles.dog_data_header}>\n                    <Avatar className={styles.data_avatar} src={prof[0]?.avatar}/>\n                    <h3>{prof[0]?.accountName}</h3>\n                </div>\n                <img className={styles.dog_data_image} src={photo} alt=\"\"/>\n            </div>\n        );\n    }\n    return null;\n};\n\nexport default Dog_Data;","/frontend/dog_adoption/src/features/core/EditProfile.tsx",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport styles from \"./Core.module.css\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {AppDispatch} from \"../../app/store\";\nimport {File} from \"../types\";\nimport {\n    fetchCredStart, fetchCredEnd,\n    fetchAsyncLogin, fetchAsyncCreateProfile, fetchAsyncGetMyProfile, fetchAsyncGetProfiles,\n    setOpenSignIn, resetOpenSignIn, setOpenSignUp, resetOpenSignUp, selectIsLoadingAuth, selectOpenSignIn,\n    selectOpenSignUp, fetchAsyncRegister, selectProfiles, selectOpenProfile, selectProfile, fetchAsyncUpdateProfile,\n    setOpenProfile, resetOpenProfile, editAccountName\n} from \"../auth/authSlice\";\nimport {Button, TextField, IconButton, CircularProgress} from \"@material-ui/core\";\nimport {MdAddAPhoto} from \"react-icons/md\";\n\nconst customStyles = {\n    content: {\n        top: \"55%\",\n        left: \"50%\",\n\n        width: 280,\n        height: 350,\n        padding: \"50px\",\n\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n\n\nconst EditProfile: React.FC = () => {\n    const dispatch: AppDispatch = useDispatch();\n    const openProfile = useSelector(selectOpenProfile);\n    const profile = useSelector(selectProfile);\n    const [image, setImage] = useState<File | null>(null);\n    const updateProfile = async (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        const packet = {id: profile.id, accountName: profile.accountName, avatar: image};\n        await dispatch(fetchCredStart());\n        await dispatch(fetchAsyncUpdateProfile(packet));\n        await dispatch(fetchCredEnd());\n        await dispatch(resetOpenProfile());\n    };\n\n    const handlerEditPicture = () => {\n        const fileInput = document.getElementById(\"imageInput\")\n        fileInput?.click();\n    };\n\n    return (\n        <>\n            <Modal isOpen={openProfile}\n                   onRequestClose={async () => {\n                       await dispatch(resetOpenProfile());\n                   }}\n                   style={customStyles}\n            >\n                <form className={styles.core_signup}>\n                    <h1 className={styles.core_title}>Dog Adoption</h1>\n                    <br/>\n                    <TextField placeholder=\"Account Name\" type=\"text\"\n                               value={profile?.accountName} onChange={(e) => dispatch(editAccountName)}/>\n                    <input type={\"file\"} id={\"imageInput\"} hidden={true} onChange={(e) => setImage(e.target.files![0])}\n                    />\n                    <br/>\n                    <IconButton onClick={handlerEditPicture}>\n                        <MdAddAPhoto/>\n                    </IconButton>\n                    <br/>\n                    <Button disabled={!profile?.accountName} variant=\"contained\" color=\"primary\"\n                            type=\"submit\" onClick={updateProfile}\n                    >\n                        Update\n                    </Button>\n                </form>\n            </Modal>\n        </>\n    );\n};\nexport default EditProfile;","/frontend/dog_adoption/src/features/auth/Auth.tsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":162,"column":41,"nodeType":"83","endLine":177,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":3,"column":35,"nodeType":"86","messageId":"87","endLine":3,"endColumn":53},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"89","line":3,"column":9,"nodeType":"86","messageId":"87","endLine":3,"endColumn":19},{"ruleId":"84","severity":1,"message":"90","line":4,"column":17,"nodeType":"86","messageId":"87","endLine":4,"endColumn":24},{"ruleId":"84","severity":1,"message":"91","line":4,"column":26,"nodeType":"86","messageId":"87","endLine":4,"endColumn":34},{"ruleId":"84","severity":1,"message":"92","line":8,"column":9,"nodeType":"86","messageId":"87","endLine":8,"endColumn":23},{"ruleId":"84","severity":1,"message":"93","line":8,"column":25,"nodeType":"86","messageId":"87","endLine":8,"endColumn":37},{"ruleId":"84","severity":1,"message":"94","line":29,"column":11,"nodeType":"86","messageId":"87","endLine":29,"endColumn":32},{"ruleId":"84","severity":1,"message":"95","line":9,"column":5,"nodeType":"86","messageId":"87","endLine":9,"endColumn":20},{"ruleId":"84","severity":1,"message":"96","line":9,"column":22,"nodeType":"86","messageId":"87","endLine":9,"endColumn":45},{"ruleId":"84","severity":1,"message":"97","line":9,"column":47,"nodeType":"86","messageId":"87","endLine":9,"endColumn":69},{"ruleId":"84","severity":1,"message":"98","line":9,"column":71,"nodeType":"86","messageId":"87","endLine":9,"endColumn":92},{"ruleId":"84","severity":1,"message":"99","line":10,"column":5,"nodeType":"86","messageId":"87","endLine":10,"endColumn":18},{"ruleId":"84","severity":1,"message":"100","line":10,"column":20,"nodeType":"86","messageId":"87","endLine":10,"endColumn":35},{"ruleId":"84","severity":1,"message":"101","line":10,"column":37,"nodeType":"86","messageId":"87","endLine":10,"endColumn":50},{"ruleId":"84","severity":1,"message":"102","line":10,"column":52,"nodeType":"86","messageId":"87","endLine":10,"endColumn":67},{"ruleId":"84","severity":1,"message":"103","line":10,"column":69,"nodeType":"86","messageId":"87","endLine":10,"endColumn":88},{"ruleId":"84","severity":1,"message":"104","line":10,"column":90,"nodeType":"86","messageId":"87","endLine":10,"endColumn":106},{"ruleId":"84","severity":1,"message":"105","line":11,"column":5,"nodeType":"86","messageId":"87","endLine":11,"endColumn":21},{"ruleId":"84","severity":1,"message":"106","line":11,"column":23,"nodeType":"86","messageId":"87","endLine":11,"endColumn":41},{"ruleId":"84","severity":1,"message":"107","line":11,"column":43,"nodeType":"86","messageId":"87","endLine":11,"endColumn":57},{"ruleId":"84","severity":1,"message":"108","line":12,"column":5,"nodeType":"86","messageId":"87","endLine":12,"endColumn":19},{"ruleId":"84","severity":1,"message":"109","line":14,"column":40,"nodeType":"86","messageId":"87","endLine":14,"endColumn":56},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react/jsx-pascal-case","Imported JSX component Dog_Data must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","@typescript-eslint/no-unused-vars","'createDispatchHook' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Divider' is defined but never used.","'Checkbox' is defined but never used.","'fetchDataStart' is defined but never used.","'fetchDataEnd' is defined but never used.","'dispatch' is assigned a value but never used.","'fetchAsyncLogin' is defined but never used.","'fetchAsyncCreateProfile' is defined but never used.","'fetchAsyncGetMyProfile' is defined but never used.","'fetchAsyncGetProfiles' is defined but never used.","'setOpenSignIn' is defined but never used.","'resetOpenSignIn' is defined but never used.","'setOpenSignUp' is defined but never used.","'resetOpenSignUp' is defined but never used.","'selectIsLoadingAuth' is defined but never used.","'selectOpenSignIn' is defined but never used.","'selectOpenSignUp' is defined but never used.","'fetchAsyncRegister' is defined but never used.","'selectProfiles' is defined but never used.","'setOpenProfile' is defined but never used.","'CircularProgress' is defined but never used.","no-global-assign","no-unsafe-negation"]